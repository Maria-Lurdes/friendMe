{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport { deleteObject, getDownloadURL, getStorage, ref, uploadBytes } from \"firebase/storage\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"../../shared/services/auth.service\";\nimport * as i3 from \"../../shared/services/alert.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/icon\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/forms\";\n\nfunction EditInfoModalComponent_mat_error_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Please fill the field correctly\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction EditInfoModalComponent_mat_error_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Please fill the field correctly\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction EditInfoModalComponent_p_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.avatarName);\n  }\n}\n\nexport let EditInfoModalComponent = /*#__PURE__*/(() => {\n  class EditInfoModalComponent {\n    constructor(dialogRef, auth, alert) {\n      this.dialogRef = dialogRef;\n      this.auth = auth;\n      this.alert = alert;\n      this.submitted = false;\n      this.firebasAuth = getAuth();\n      this.fireStorage = getStorage();\n      onAuthStateChanged(this.firebasAuth, user => {\n        if (user) {\n          this.user = user;\n          this.updatedInfo = new FormGroup({\n            email: new FormControl(this.user.email, [Validators.required, Validators.email]),\n            displayName: new FormControl(this.user.displayName, [Validators.required]),\n            photoURL: new FormControl(this.user.photoURL, [])\n          });\n        }\n      });\n    }\n\n    ngOnInit() {}\n\n    closeModal() {\n      this.dialogRef.close();\n    }\n\n    updateUserImage() {\n      const imageRef = ref(this.fireStorage, `users-avatars/${this.user.uid}`);\n\n      if (this.user.photoURL && !this.user.photoURL.includes(\"facebook\")) {\n        deleteObject(imageRef).then(() => {\n          this.uploadImageToStorage();\n        }).catch(() => {\n          this.submitted = false;\n          this.alert.danger(\"Smth went wrong, try again later\");\n        });\n      } else {\n        this.uploadImageToStorage();\n      }\n    }\n\n    uploadImageToStorage() {\n      const file = this.userAvatar.item(0);\n      let url = ref(this.fireStorage, `users-avatars/${this.user.uid}`);\n      const metadata = {\n        contentType: \"image/jpeg\"\n      };\n      uploadBytes(url, file, metadata).then(() => {\n        getDownloadURL(url).then(url => __awaiter(this, void 0, void 0, function* () {\n          this.updatedInfo.value.photoURL = url;\n          yield this.saveNewUserInfo();\n        }));\n      }, () => this.submitted = false);\n    }\n\n    setFile(e) {\n      if (e.target.files[0].size > 50000000) {\n        this.alert.warning(\"Your file is bigger than 500ko. Please, choose another one.\");\n      } else {\n        this.userAvatar = e.target.files;\n        this.avatarName = e.target.files[0].name;\n      }\n    }\n\n    submit() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.submitted = true;\n\n        if (this.userAvatar && this.userAvatar[0]) {\n          this.updateUserImage();\n        } else {\n          yield this.saveNewUserInfo();\n        }\n      });\n    }\n\n    saveNewUserInfo() {\n      return __awaiter(this, void 0, void 0, function* () {\n        yield this.auth.updateUserProfile({\n          email: this.updatedInfo.value.email,\n          displayName: this.updatedInfo.value.displayName,\n          photoURL: this.updatedInfo.value.photoURL\n        });\n        this.submitted = false;\n        this.closeModal();\n      });\n    }\n\n  }\n\n  EditInfoModalComponent.ɵfac = function EditInfoModalComponent_Factory(t) {\n    return new (t || EditInfoModalComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.AlertService));\n  };\n\n  EditInfoModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditInfoModalComponent,\n    selectors: [[\"app-edit-info-modal\"]],\n    decls: 26,\n    vars: 5,\n    consts: [[\"mat-dialog-title\", \"\", 1, \"title-wrapper\"], [\"matSuffix\", \"\", 3, \"click\"], [1, \"mat-typography\"], [1, \"form-wrapper\", 3, \"formGroup\"], [\"appearance\", \"outline\"], [\"formControlName\", \"displayName\", \"matInput\", \"\", \"type\", \"text\"], [4, \"ngIf\"], [\"formControlName\", \"email\", \"matInput\", \"\", \"type\", \"text\"], [1, \"custom-file-upload\"], [\"accept\", \"image/png, image/jpeg\", \"type\", \"file\", 3, \"change\"], [\"matSuffix\", \"\"], [\"class\", \"file-name\", 4, \"ngIf\"], [\"color\", \"primary\", \"mat-raised-button\", \"\", 3, \"disabled\", \"click\"], [1, \"file-name\"]],\n    template: function EditInfoModalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\", 0)(1, \"span\");\n        i0.ɵɵtext(2, \"Edit My Profile\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mat-icon\", 1);\n        i0.ɵɵlistener(\"click\", function EditInfoModalComponent_Template_mat_icon_click_3_listener() {\n          return ctx.closeModal();\n        });\n        i0.ɵɵtext(4, \"close\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"mat-dialog-content\", 2)(6, \"form\", 3)(7, \"mat-form-field\", 4)(8, \"mat-label\");\n        i0.ɵɵtext(9, \"Your New Display Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 5);\n        i0.ɵɵtemplate(11, EditInfoModalComponent_mat_error_11_Template, 2, 0, \"mat-error\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"mat-form-field\", 4)(13, \"mat-label\");\n        i0.ɵɵtext(14, \"Your New Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 7);\n        i0.ɵɵtemplate(16, EditInfoModalComponent_mat_error_16_Template, 2, 0, \"mat-error\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"label\", 8)(18, \"input\", 9);\n        i0.ɵɵlistener(\"change\", function EditInfoModalComponent_Template_input_change_18_listener($event) {\n          return ctx.setFile($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"mat-icon\", 10);\n        i0.ɵɵtext(20, \"folder\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(21, \" Upload new avatar for user \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(22, EditInfoModalComponent_p_22_Template, 2, 1, \"p\", 11);\n        i0.ɵɵelementStart(23, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function EditInfoModalComponent_Template_button_click_23_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(24, \"span\");\n        i0.ɵɵtext(25, \" Apply Changes \");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formGroup\", ctx.updatedInfo);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.updatedInfo == null ? null : ctx.updatedInfo.get(\"displayName\").errors);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.updatedInfo == null ? null : ctx.updatedInfo.get(\"email\").errors);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.avatarName);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", (ctx.updatedInfo == null ? null : ctx.updatedInfo.invalid) || ctx.submitted);\n      }\n    },\n    dependencies: [i4.NgIf, i5.MatButton, i6.MatIcon, i1.MatDialogTitle, i1.MatDialogContent, i7.MatError, i7.MatFormField, i7.MatLabel, i7.MatSuffix, i8.MatInput, i9.ɵNgNoValidate, i9.DefaultValueAccessor, i9.NgControlStatus, i9.NgControlStatusGroup, i9.FormGroupDirective, i9.FormControlName],\n    styles: [\".title-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center}.title-wrapper[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{cursor:pointer}h2[_ngcontent-%COMP%]{font-size:26px;color:#03063a}h4[_ngcontent-%COMP%]{font-size:16px;color:#70717b}.form-wrapper[_ngcontent-%COMP%]{width:400px;display:flex;flex-direction:column}.form-wrapper[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin-top:30px}.form-wrapper[_ngcontent-%COMP%]   .file-name[_ngcontent-%COMP%]{text-align:center}.form-wrapper[_ngcontent-%COMP%]   input[type=file][_ngcontent-%COMP%]{display:none}.form-wrapper[_ngcontent-%COMP%]   .custom-file-upload[_ngcontent-%COMP%]{width:100%;display:flex;justify-content:center;flex-wrap:wrap;cursor:pointer;border:1px solid #e0e0e0;line-height:36px;align-items:center;border-radius:4px}.form-wrapper[_ngcontent-%COMP%]   .custom-file-upload[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{margin-right:5px}.form-wrapper[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin-top:30px;background:linear-gradient(180deg,#fdd153 0%,#f5c02d 100%);padding:8px 0}@media (max-width: 768px){.form-wrapper[_ngcontent-%COMP%]{width:300px}}@media (max-width: 475px){.form-wrapper[_ngcontent-%COMP%]{width:245px}}\"]\n  });\n  return EditInfoModalComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}